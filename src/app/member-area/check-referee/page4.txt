"use client";

import Image from "next/image";
import {  ConnectButton, MediaRenderer, TokenIcon, TokenProvider, TransactionButton, useActiveAccount, useReadContract } from "thirdweb/react";
import dprojectIcon from "@public/DFastLogo_650x600.svg";
import { client } from "../../client";
import { chain  } from "../../chain";
import { inAppWallet } from "thirdweb/wallets";
import { getContract, toEther } from "thirdweb";
import { defineChain, polygon } from "thirdweb/chains";
import { claimTo as claimERC1155, balanceOf as balanceOfERC1155 } from "thirdweb/extensions/erc1155";
import { claimTo as claimERC20, balanceOf as balanceOfERC20 } from "thirdweb/extensions/erc20";
import { contract } from "../../../../utils/contracts";
import { getContractMetadata } from "thirdweb/extensions/common";
import TokenDFast from "@/app/components/TokenfDFast";
import Link from "next/link";
import { useEffect, useState } from "react";

interface RefereeData {
    refereeId: string;
    referrerId: string;
  }
  
  interface ReferrerData {
    referrerId: string;
    name?: string;
    email?: string;
    tokenId?: string;
  }

export default function RefereePage() {
    const account = useActiveAccount();

    const { data: nftMetadata } = useReadContract(
        getContractMetadata,
        {
          contract: contract,
        }
      );
    

    return (
        <main className="p-4 pb-10 min-h-[100vh] flex flex-col items-center">
            <div style={{
                    display: "flex",
                    flexDirection: "column",
                    alignItems: "center",
                    justifyContent: "center",
                    padding: "20px",
                    margin: "20px",
                    border: "1px solid #333",
                    borderRadius: "8px",
                  }}>
                <Header />
                <div className="flex justify-center mb-10">
                <ConnectButton locale={"en_US"} 
                        client={client}
                        chain={chain}
                        wallets={[ inAppWallet ({
                        auth: {
                            options: [
                                "email",
                            ]
                            }
                        }) ]}
                        connectButton={{ label: "ล็อกอิน" }}
                        connectModal={{
                            title: "เชื่อมต่อกระเป๋า",
                            titleIcon: "https://dfi.fund/_next/static/media/DFastLogo_650x600.4f2ec315.svg",
                            size: "wide", // Change to "compact" or "auto" 
                        }}
                        supportedTokens={{
                        [chain.id]: [
                            {
                                address: "0xca23b56486035e14F344d6eb591DC27274AF3F47",
                                name: "DProject",
                                symbol: "DFI",
                                icon: "https://dfi.fund/_next/static/media/DFastLogo_650x600.4f2ec315.svg",
                            },
                            {
                                address: "0x3c499c542cEF5E3811e1192ce70d8cC03d5c3359",
                                name: "USDC",
                                symbol: "USDC",
                                icon: "https://polygonscan.com/token/images/centre-usdc_32.png",
                            },
                            {
                                address: "0xc2132D05D31c914a87C6611C10748AEb04B58e8F",
                                name: "USDT",
                                symbol: "USDT",
                                icon: "https://polygonscan.com/token/images/tether_32.png",
                                },
                        ],
                        }}
                        supportedNFTs={{
                        [chain.id]: [
                            "0x2a61627c3457cCEA35482cAdEC698C7360fFB9F2", // nft contract address
                        ],
                        }}
                    />
                </div>
                {/* <NFTMetadata /> */}
                {/* <div className="flex flex-col items-center mb-6">
                    <ClaimButtons walletAddress={account?.address || ""}/>
                </div> */}
                <div className="flex flex-col justify-center items-center">
                    <WalletBalances walletAddress={account?.address || ""}/>
                </div>
            </div> 
            <div className="flex flex-col items-center">
                    <Link 
                        className="flex flex-col mt-4 border border-zinc-500 px-4 py-3 rounded-lg hover:bg-zinc-800 transition-colors hover:border-zinc-800"
                        href="/">
                        กลับหน้าหลัก
                    </Link>
            </div>
        </main>
    )
    
}

function  Header() {
    return (
        <header className="flex flex-col items-center mb-12 mb:mb-20">
            <Image
                src={dprojectIcon}
                alt=""
                className="mb-4 size-[100px] md:size-[100px]"
                style={{
                    filter: "drop-shadow(0px 0px 24px #a726a9a8"
                }}
            />

            <h1 className="text-1xl md:text-4xl font-semibold md:font-bold tracking-tighter">
               Check Referee
            </h1>
        </header>
    );
}

type walletAddresssProps = {
    walletAddress?: string;
};

const ClaimButtons: React.FC<walletAddresssProps> = ({ walletAddress }) => {
    const nftContract = getContract({
        client: client,
        chain: defineChain(polygon),
        address: "0x2a61627c3457cCEA35482cAdEC698C7360fFB9F2"
    });
    const dfastContract = getContract({
        client: client,
        chain: defineChain(polygon),
        address: "0xca23b56486035e14F344d6eb591DC27274AF3F47"
    })

    return (
        <div className="flex flex-col gap-4 md:gap-8">
            {/* <TransactionButton
                // className="border bg-zinc-800 border-zinc-500 px-4 py-3 rounded-lg hover:bg-zinc-100 transition-colors hover:border-zinc-300"
                transaction={() => claimERC1155({
                    contract: nftContract,
                    to: walletAddress || "",
                    tokenId: 0n,
                    quantity: 1n
                })}
                onTransactionConfirmed={async () => {
                    alert("ทำรายการซื้อ คูปอง 3K NFT เรียบร้อย ");
                }}
            >ซื้อคูปอง 3K NFT</TransactionButton> */}
        </div>
    )
};

const WalletBalances: React.FC<walletAddresssProps> = ({ walletAddress }) => {

    return (
        <div style={{
            display: "flex",
            flexDirection: "column",
            width: "100%",
            alignItems: "center",
            justifyContent: "center",
            padding: "20px",
            // border: "1px solid #333",
            // borderRadius: "8px",
          }}>
            <div 
            style={{
                display: "flex",
                flexDirection: "column",
                alignItems: "center",
                width: "100%",
                fontSize: "24px",
                justifyContent: "center",
                paddingBottom: "20px",
              }}
            >
                {/* <p style={{fontSize: "24px"}}><b>รายการทรัพย์สิน</b></p> */}
                <p style={{fontSize: "19px"}}><b>เลขที่กระเป๋าของท่าน</b></p>
                <div style={{border: "1px solid #444", background: "#222", padding: "0px 6px", margin: "6px"}}>
                <p className="text-[18px] break-all">{walletAddress ? walletAddress || "" : "ยังไม่ได้เชื่อมกระเป๋า !"} </p>    
                </div>
            </div>
            
            <div className="flex flex-col w-full items-center justify-center mt-6">
                <div className="flex flex-col items-center w-full justify-center pt-[15px] pb-[5px]">
                    <div className="flex flex-col justify-center items-center w-[300px]">
                        <Link 
                            className="flex flex-col border border-zinc-500 px-4 py-3 rounded-lg hover:bg-red-600 transition-colors hover:border-zinc-800"
                            href="/member-area">
                            <p className="text-center text-[19px]">กลับสู่พื้นที่สมาชิก</p>
                        </Link>
                    </div>
                </div>
            </div>
        </div>
    )
};